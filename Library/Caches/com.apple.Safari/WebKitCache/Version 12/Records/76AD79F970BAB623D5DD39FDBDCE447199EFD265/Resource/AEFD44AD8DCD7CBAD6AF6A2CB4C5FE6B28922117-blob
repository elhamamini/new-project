[{"_id":"5997539589d1c60004625342","order":0,"name":"Overview","workshop":"59970ac2838dc60004e6868a","__v":5,"slug":"foundations-builders::overview","draftMode":false,"actions":[{"_id":"599b1162994801000412ccbf","name":"What is the \"Builders\" program?","concept":"5997539589d1c60004625342","order":0,"__v":2,"text":"Foundations \"Builders\" is a self-driven course that introduces some of the technologies and programming concepts needed for the Immersive program. The \"Builders\" program provides practice and repetition with basic programming exercises to increase exposure to problem-solving and make JavaScript syntax feel like second nature.\n\nFoundations \"Builders\" is designed for students that demonstrate excellent potential in the Admissions process. The goal of the \"Builders\" program is to ultimately join the Immersive program.  Passing Foundations \"Builders\" will permit entry to the next phase of Fullstack, which is Foundations (the official pre-work portion of the Immersive). \n\nStudents in the Foundations Builders course should already have an understanding of the basics such as:\n\n- Variables\n- Data Types\n- Loops\n- Functions\n- Conditionals\n\nThese concepts will be built on throughout the course. Let's take a look at the course structure.","slug":"foundations-builders::overview::what-is-the-builders-program","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"5997539589d1c60004625342","id":"599b1162994801000412ccbf"},{"_id":"599b1171489ecc00049cc242","name":"Structure","concept":"5997539589d1c60004625342","order":1,"__v":3,"text":"The Builders program takes two weeks to complete and is 100% self-paced. At the end of the course, **a checkpoint is administered**, it is based on the content from Builders. Here is the pace we suggest following to prepare for the Checkpoint:\n\n**Week 1:**\n- Introduction to the Command Line\n- Set Up Your Box\n- Introduction to Git\n- Builders Test First\n  - 00-Reading-Test-Specs\n  - 01-Strings\n  - 02-Arrays\n\n**Week 2:**\n- Builders Test First\n  - 03-Array.prototype\n  - 04-Objects\n  - 05-Random (more exercises are coming!)\n- Builders Checkpoint Assessment (this is not available in learndot until it is released by the Academics Staff)","slug":"foundations-builders::overview::structure","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"5997539589d1c60004625342","id":"599b1171489ecc00049cc242"},{"_id":"599b1178489ecc00049cc245","name":"Support System","concept":"5997539589d1c60004625342","order":2,"__v":5,"text":"The \"Foundations Builders\" program is self-driven, however, there is a forum where you can post questions, have discussions with classmates, and receive responses from Fullstack's Instructional Staff.  The forum used throughout Fullstack is called \"Discuss\".\n\n#### Discuss\n\nDiscuss is the first option for students to receive support. If you have questions about the curriculum, concepts, or are having system problems, your first instinct should be to post on Discuss. (If you email an instructor or our support staff, your questions may get lost in their inbox! Please only email instructors about personal matters, not questions related to the curriculum!) Always keep in mind that Discuss is a judgment free zone, and it is safe to ask any question, no matter how basic or complex you think it is. Discuss is a great place to get help from your fellow students, and we highly encourage all students to help their classmates as much as they can. You can learn a lot from teaching others!\n\nPlease post links, learning resources, or anything you feel is important at discuss.fullstackacademy.com. Furthermore, if you have specific questions on the \"Builders\" material, post your questions on Discuss. Many students use Discuss as their main source of help from the Instructional Staff and classmates. Since the \"Builders\" program is self-driven, the Instructional Staff will do their best to answer questions in a timely manner. Please be aware that we are not able to check Discuss on weekends.\n\nView the image below to access \"Discuss\". If you don't have access to a \"support\" item in your navigation menu, please email `foundations@fullstackacademy.com` .\n\n<img src=\"https://www.dropbox.com/s/ldb4rzrh7gn4am7/support-img.png?raw=1\">\n\n#### Mentor Support\n\nOver the first week of the Builders program, you will be introduced to your mentor. A mentor is either an Instructor or alumni who will be available to help you through the program. They will answer questions on Discuss and also have available office hours conducted remotely over [Zoom](https://zoom.us/). You'll have the opportunity to have a maximum of two, 25 minute sessions with your mentor per week. Please keep in mind you will need to do your best to make the times your mentor posts.","slug":"foundations-builders::overview::support-system","__t":"Content","visibilityLevel":2,"draftMode":true,"conceptId":"5997539589d1c60004625342","id":"599b1178489ecc00049cc245"},{"_id":"59c4218a0c9bc3000471cdcb","name":"Support System","concept":"5997539589d1c60004625342","order":3,"__v":1,"text":"The \"Foundations Builders\" program is self-driven, however, there is a forum where you can post questions, have discussions with classmates, and receive responses from Fullstack's Instructional Staff.  The forum used throughout Fullstack is called \"Discuss\".\n\n#### Discuss\n\nDiscuss is the first option for students to receive support. If you have questions about the curriculum, concepts, or are having system problems, your first instinct should be to post on Discuss. (If you email an instructor or our support staff, your questions may get lost in their inbox! Please only email instructors about personal matters, not questions related to the curriculum!) Always keep in mind that Discuss is a judgment free zone, and it is safe to ask any question, no matter how basic or complex you think it is. Discuss is a great place to get help from your fellow students, and we highly encourage all students to help their classmates as much as they can. You can learn a lot from teaching others!\n\nPlease post links, learning resources, or anything you feel is important at discuss.fullstackacademy.com. Furthermore, if you have specific questions on the \"Builders\" material, post your questions on Discuss. Many students use Discuss as their main source of help from the Instructional Staff and classmates. Since the \"Builders\" program is self-driven, the Instructional Staff will do their best to answer questions in a timely manner. Please be aware that we are not able to check Discuss on weekends.\n\nView the image below to access \"Discuss\". If you don't have access to a \"support\" item in your navigation menu, please email `foundations@fullstackacademy.com` .\n\n<img src=\"https://www.dropbox.com/s/ldb4rzrh7gn4am7/support-img.png?raw=1\">\n\n#### Help Desk\n\nThe Help Desk is located in the bottom right of your learndot platform. Check your calendar for times the Help Desk is open, keep in mind if you post questions when the Help Desk isn't open, your questions won't be answered. It's better to post on Discuss when the Help Desk isn't open!\n\nThe Help Desk is managed by Mentors (Alumni who are currently in the workforce) and Instructors. When using the Help Desk, download [Zoom](https://zoom.us/) to connect via video chat and to pair program and get your questions answered.","createdAt":"2018-10-16T21:25:22.563Z","slug":"foundations-builders::overview::support-system-1","updatedAt":"2018-10-16T21:25:22.563Z","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"5997539589d1c60004625342","id":"59c4218a0c9bc3000471cdcb"},{"_id":"599de17c1f96b30004b68e7e","name":"Checkpoint","concept":"5997539589d1c60004625342","order":4,"__v":2,"text":"The goal of the Builders program is to provide practice material and ultimately ramp up your skills for the Immersive Program. **On the last Friday of the course**, a checkpoint will be available on learndot (Fullstack's learning platform). The Checkpoint is intended to be completed over one sitting (roughly 2 hours and 45 minutes). You will be able to initiate the Checkpoint from Friday morning through the weekend (up until Monday 6 PM EST).\n\nThe Checkpoint will contain a few problems that are similar to Builders Test First.  It will evaluate your problem-solving skills and mastery of the basics of JavaScript.  Keep in mind, even though you have the whole weekend to start the checkpoint, it must be completed within 2 hours and 45 minutes, any commits after that time won't count towards your grade.\n\nYou will receive your grade a few days after the due date of the Checkpoint.  Please reach out to your mentor or post on Discuss if you have additional questions!","slug":"foundations-builders::overview::checkpoint","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"5997539589d1c60004625342","id":"599de17c1f96b30004b68e7e"}],"workshopId":"59970ac2838dc60004e6868a","id":"5997539589d1c60004625342"},{"_id":"59970ac2838dc60004e6868d","name":"Introduction to the Command Line","workshop":"59970ac2838dc60004e6868a","order":1,"__v":1,"slug":"foundations-builders::introduction-to-the-command-line","draftMode":false,"actions":[{"_id":"59970ac2838dc60004e686a0","concept":"59970ac2838dc60004e6868d","name":"Overview","text":"Learning the CLI (Command Line Interface) is an important skill to have as a developer.  If you don't have experience using the CLI or would like a review, complete this section of the curriculum.  You will be expected to have an understanding and comfort using basic commands in a CLI.\n\n**Estimated Time to Complete**: 2 Hours","order":0,"__v":0,"slug":"foundations-builders::introduction-to-the-command-line::overview","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e686a0"},{"_id":"59970ac2838dc60004e68698","concept":"59970ac2838dc60004e6868d","name":"Intro to the Command Line","text":"###Getting Started with the Command Line\n\nDo you want to start feeling like a Web Developer? There is no better way than to start learning the basics of your Command Line (also called Console or Terminal).  We have outlined a few commands you should start using throughout the rest of Foundations so you are comfortable in the Command Line your first day at Fullstack.\n\nThis is a great intro course to the Command Line. The command line and console can be scary at first but learning how it works will change the way you interact with your computer. It will take a few hours but it’s the best investment you can make early on in understanding what’s going on with your machine.\n\nEach command is linked to a resource explaining how to use the command and a set of practice exercises.\n\n<hr>\n\n**If you already have an understanding of the Command Line and are familiar with these commands, feel free to move through this section at your own speed and pace.**","order":1,"featuredVideoId":"wBu6mQE7jaU","__v":0,"slug":"foundations-builders::introduction-to-the-command-line::intro-to-the-command-line","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e68698"},{"_id":"59970ac2838dc60004e68699","concept":"59970ac2838dc60004e6868d","name":"Anatomy of the CLI and echo","text":"In the following lesson, we'll review the different pieces that make up the command line such as `prompts` and `commands`.  \n\nAt the end of the lesson, we'll input our first command ( `echo`) and demonstrate commands and keyboard shortcuts to get you out of trouble in the event, you are stuck in the Command Line.\n\nKey Concepts:\n\n- Command Prompt\n- Command\n- Options (flags)\n- Arguments\n- Cursor\n- `CTRL + C` (Kill command)\n- `echo`\n\n####Iterm2\n\n* Download [iTerm 2](http://www.iterm2.com/#/section/home). iTerm2 is a replacement for your Mac's Terminal and adds additional features and is overall easier and better to work with.","order":2,"featuredVideoId":"NzDnVcauxT4","__v":0,"slug":"foundations-builders::introduction-to-the-command-line::anatomy-of-the-cli-and-echo","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e68699"},{"_id":"59970ac2838dc60004e6869a","concept":"59970ac2838dc60004e6868d","name":"CLI - Cursor Navigation","text":"Let's learn how to navigate the `cursor` in the Command Line, remember, \"It's not a bug, it's a feature\"!\n\nKey Concepts:\n\n- `CTRL + a` : Move to beginning\n- `CTRL + e` : Move to end\n- Use Up and Down arrow keys to toggle through previous commands\n- `CTRL + u` : Clears current line\n- `CTRL + l` : Clears the terminal window (does not clear history)","order":3,"featuredVideoId":"XsgMYqmH3uc","__v":1,"slug":"foundations-builders::introduction-to-the-command-line::cli-cursor-navigation","createdAt":"2018-06-11T16:12:13.039Z","updatedAt":"2018-06-11T16:12:13.039Z","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e6869a"},{"_id":"59970ac2838dc60004e6869b","concept":"59970ac2838dc60004e6868d","name":"CLI - ls command","text":"In this lesson, we'll look at the GUI (Graphical User Interface) and the CLI (Command Line Interface) side by side.  We'll compare how the `ls` command relates to the information in our GUI.  We'll also review a few additional commands!\n\nKey Concepts:\n\n- `ls` : List command (lists the directories in from the current directory)\n- `ls + directory` : Lists the directories from the argument\n- `pwd` : print working directory\n- File Path : A files location in the Filesystem\n- Directory : A \"folder\"\n- Standard Output : The output in the Command Line after a command\n- `man + command` : Manual, displays the manual for the current command\n- `ls -a` : Displays all of the \"hidden\" files in a directory \n- `q` : Another \"get out of trouble\" command (try q when `CTRL + C` doesn't work","order":4,"featuredVideoId":"6AUlOoCF5Dk","__v":0,"slug":"foundations-builders::introduction-to-the-command-line::cli-ls-command","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e6869b"},{"_id":"59970ac2838dc60004e6869c","concept":"59970ac2838dc60004e6868d","name":"Directories and Filesystems","text":"In the previous lesson, we caught a glimpse of directories and the filesystem, now it's time to dive deeper into these topics! We'll review directories, the filesystem's tree-like structures, system folders, and more!\n\nKey Concepts:\n\n- Paths\n  - Absolute Path : Full path starting from the Systems Root directory\n  - Relative Path : a path starting from it's current location relative to another location in the filesystem.\n  - `..`: move up the filesystem\n  - Directory : \"folder\"","order":5,"featuredVideoId":"XHBB08DmSNg","__v":0,"slug":"foundations-builders::introduction-to-the-command-line::directories-and-filesystems","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e6869c"},{"_id":"59970ac2838dc60004e6869d","concept":"59970ac2838dc60004e6868d","name":"Navigating the Filesystem","text":"Now that we have an idea on how the Filesystem (FS) is structured, let's learn a basic command to help us navigate throughout it!\n\nKey Concepts:a\n\n- `cd + path` : the change directory path changes the current working directory the path passed as an argument.\n- Abosolute Path\n- Relative Path\n- `cd` : if the argument is omitted from `cd`, cd will take the user back to the home directory.","order":6,"featuredVideoId":"5V-FVztVrTI","__v":0,"slug":"foundations-builders::introduction-to-the-command-line::navigating-the-filesystem","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e6869d"},{"_id":"59970ac2838dc60004e6869e","concept":"59970ac2838dc60004e6868d","name":"Making Directories","text":"Let's make new directories and files and see them appear in the CLI and GUI!\n\nKey Concepts:\n\n- `mkdir + directory_name` : Create a directory and pass it a name.\n- `touch + filename` : Create a file and pass it a name.\n- `mv + file_to_move + destination_path` : Move a file or folder to a new location\n- `mkdir + directory1 + directory2 + directory3...` : Make multiple directories at once.","order":7,"featuredVideoId":"9_uprwKVDtM","__v":0,"slug":"foundations-builders::introduction-to-the-command-line::making-directories","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e6869e"},{"_id":"59970ac2838dc60004e6869f","concept":"59970ac2838dc60004e6868d","name":"What is a Shell?","text":"Have you noticed the terminonly \"shell\" used throughout previous videos? Let's find out what the shell is and how it fits in with the Command Line.","order":8,"featuredVideoId":"mc3_d6GEfd4","__v":0,"slug":"foundations-builders::introduction-to-the-command-line::what-is-a-shell","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868d","id":"59970ac2838dc60004e6869f"}],"workshopId":"59970ac2838dc60004e6868a","id":"59970ac2838dc60004e6868d"},{"_id":"59970ac2838dc60004e6868e","name":"Set Up Your Box","workshop":"59970ac2838dc60004e6868a","order":2,"__v":1,"slug":"foundations-builders::set-up-your-box","draftMode":false,"actions":[{"_id":"59970ac2838dc60004e686a1","concept":"59970ac2838dc60004e6868e","name":"Overview","text":"It is important to set up your machine properly! If you already have git, node, and a text editor installed you can skip this section.  Continue progressing through this section if you need to set up your box.\n\nAt Fullstack Academy and Grace Hopper Academy, we **support Mac software**. If you have a Windows or Linux operating system, **it's up to you to make sure that you have everything installed and working properly**. We encourage students using Windows to either install Linux or invest in a Macbook.\n\nIf you can't get the software in the following steps working either due to a bug or OS difference, then you're welcome to set up a virtual environment for the duration of Foundations \"Builders\" and Foundations. This will give you time to work on getting your computer ready for the immersive program.\n\nFollow the directions in [this gist](https://gist.github.com/ScottDalessandro/bf76c79d8046ccf6ab70ae9fb306ac6c) to set up a virtual environment using Cloud9.\n\n\n\n**Estimate Time To Complete** - 1 Hour","order":-1,"__v":1,"slug":"foundations-builders::set-up-your-box::overview","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868e","id":"59970ac2838dc60004e686a1"},{"_id":"59970ac2838dc60004e686a2","concept":"59970ac2838dc60004e6868e","name":"Installing a Text Editor","text":"It's important that you start Foundations with a good text editor meant for writing code.\n\nThere are many great text editors that you can use, and they all have different strengths and weaknesses.\n\nWe offer a lot of support for [Visual Studio Code](https://code.visualstudio.com/download) which is a powerful editor that comes built in with debugger capabilities and git integration. Plus, it's free!\n\nAnother option is [Sublime Text 3](https://www.sublimetext.com/3), a very simple, easy to use text editor.  It is lightweight and comes with many built in packages that you can install.\n\nMany students also enjoy using [Atom](https://atom.io/), which is built by GitHub! \n\nMost of the code in the instructional videos will feature Sublime or Visual Studio Code as the text editor, but you are welcome to use any of these or your favorite text editor of choice.","order":0,"__v":1,"slug":"foundations-builders::set-up-your-box::installing-a-text-editor","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868e","id":"59970ac2838dc60004e686a2"},{"_id":"59970ac2838dc60004e686a3","concept":"59970ac2838dc60004e6868e","name":"Installing Node and NPM","text":"Next, you'll need to make sure you have npm and Node installed. Before you start, run the command `which node` in your terminal. If you don't have any output, then you'll need to download and install Node and npm. \n\nNode is a runtime environment for JavaScript that runs in your terminal. We won't use it during Foundations, but you'll use it often during the Immersive. npm is the package manager for Node, and you'll need it in order to install testem, which is what you'll use during Test First to check if your tests are passing.\n\nYou can download both Node and npm [here from the Node.js website](https://nodejs.org/en/download/).","order":1,"__v":0,"slug":"foundations-builders::set-up-your-box::installing-node-and-npm","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868e","id":"59970ac2838dc60004e686a3"},{"_id":"59970ac2838dc60004e686a4","concept":"59970ac2838dc60004e6868e","name":"Installing git","text":"**If you don't have Git installed** on your system, review the following video and Install Git using X-Code (Mac).\n\nYou can check to see if git is already installed by running `which git` in your terminal.","order":2,"featuredVideoId":"u4CRWaYUExs","__v":0,"slug":"foundations-builders::set-up-your-box::installing-git","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868e","id":"59970ac2838dc60004e686a4"},{"_id":"59970ac2838dc60004e686a5","concept":"59970ac2838dc60004e6868e","name":"Git Settings and ID","text":"Create your Git Identification! Configure and add a Git Name and Email which will be associated with your commit messages and Github account.\n\nHere is a [link to Github's documentation](https://help.github.com/articles/set-up-git/) used in the video.","order":3,"featuredVideoId":"RBKoRY8cOfE","__v":0,"slug":"foundations-builders::set-up-your-box::git-settings-and-id","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868e","id":"59970ac2838dc60004e686a5"}],"workshopId":"59970ac2838dc60004e6868a","id":"59970ac2838dc60004e6868e"},{"_id":"59970ac2838dc60004e6868b","name":"Introduction to Git","workshop":"59970ac2838dc60004e6868a","order":3,"__v":1,"slug":"foundations-builders::introduction-to-git","draftMode":false,"actions":[{"_id":"59970ac2838dc60004e68691","concept":"59970ac2838dc60004e6868b","name":"Overview","text":"Git is important tool you will use daily as a student and developer.  Complete this section if you don't have prior experience with Git and Github or you would like to refresh your knowledge.\n\n**Estimate Time to Complete**: 2 Hours","order":0,"__v":0,"slug":"foundations-builders::introduction-to-git::overview","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868b","id":"59970ac2838dc60004e68691"},{"_id":"59970ac2838dc60004e68690","concept":"59970ac2838dc60004e6868b","name":"Intro To Version Control and Git","text":"#### Intro to Version Control Systems, Git and Github\n\nIn the earlier section of this workshop, Setting up your Box, you should have installed and configured git.\n\nGit is an example of a VCS, or Version Control System. Git is the most commonly used VCS at this time, and will be used in your everyday workflow at Fullstack and as a developer.\n\nThis video walks you through what a VCS is and why we want to use one.\n\nAdditional Resources:\n[About Version Control](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control)","order":1,"featuredVideoId":"r70TR5XNvis","__v":0,"slug":"foundations-builders::introduction-to-git::intro-to-version-control-and-git","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868b","id":"59970ac2838dc60004e68690"},{"_id":"59970ac2838dc60004e68692","concept":"59970ac2838dc60004e6868b","name":"Using Basic Git commands","text":"#### Examples using the basic Git commands in the terminal\n\nGit will be your constant companion in the coming years as a developer. It's important to get as much practice with it as you can. After watching this video, practice `git add`, `git commit`, `git status` and `git log` with your own projects and files.\n\nIf git is not installed on your computer, please reference our 'Installing Git' video which can be found in the 'Setting up your Box' section of this workshop.\n\n#### Recap Questions\n\n* How do you create a local repository?\n* What is the staging area and how do you add files to it?","order":2,"featuredVideoId":"Lq51ie88XoE","__v":0,"slug":"foundations-builders::introduction-to-git::using-basic-git-commands","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868b","id":"59970ac2838dc60004e68692"},{"_id":"59970ac2838dc60004e68693","concept":"59970ac2838dc60004e6868b","name":"Using Git and GitHub in Harmony","text":"#### Intro to Github\n\nBefore watching this video, make a free account on Github if you haven't already done so [here](https://github.com/).\n\nThis video covers the relationship between Github and Git, how to make remote repositories, and the proper workflow when forking and cloning your Test First assignments.\n\nThere is so much more to git than these videos can cover! Make sure you check out the references below! Git may seem very confusing and out there right now, but with enough practice, it will become second nature.\n\n\n\n#### Recap Questions\n* What is the process of cloning and forking a repository? \n* What is the difference between the two?\n* What does 'origin' refer to? \n\n### References\n[Simple Guide to Git](http://rogerdudler.github.io/git-guide/)","order":3,"featuredVideoId":"7oAE44C5miM","__v":1,"slug":"foundations-builders::introduction-to-git::using-git-and-git-hub-in-harmony","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868b","id":"59970ac2838dc60004e68693"},{"_id":"59970ac2838dc60004e68694","concept":"59970ac2838dc60004e6868b","name":"Additional Resources","text":"If you find yourself struggling to understand git and GitHub, here are some resources that can solidify your understanding. Also, don't forget about live office hours and Discuss! We are happy to answer your git related questions.\n\n* [LearnGitBranching](http://learngitbranching.js.org/) - A longer, more in-depth tutorial. I would recommend completing the first section: 'Introduction sequence'\n\nPractice making your own repositories!\n1. Make a local git repository using `git init` inside a new directory\n2. Write some code!\n3. Add your new code to the staging area with `git add`, then make a commit using `git commit`\n4. Make a new remote repository on Github\n5. Follow the instructions given after you create your repo to add your GitHub repo as a remote for your local project.\n6. Use `git push master origin` to push your work up to your remote on GitHub!\n7. Repeat until it's second nature!","order":4,"__v":1,"slug":"foundations-builders::introduction-to-git::additional-resources","createdAt":"2018-07-19T15:40:35.553Z","updatedAt":"2018-07-19T15:40:35.553Z","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868b","id":"59970ac2838dc60004e68694"}],"workshopId":"59970ac2838dc60004e6868a","id":"59970ac2838dc60004e6868b"},{"_id":"599753b18ca3f20004469a97","order":4,"name":"Builders Test First","workshop":"59970ac2838dc60004e6868a","__v":7,"slug":"foundations-builders::builders-test-first","draftMode":false,"actions":[{"_id":"599ef7fc1f96b30004b6a3f2","name":"Overview","concept":"599753b18ca3f20004469a97","order":-1,"__v":1,"text":"Builders Test First is a series of problems that exercise your problem-solving skills and reinforces JavaScript syntax (especially if you are new to the language).\n\nOne of the best ways of growing as a developer is tackling challenges and learning how to solve them. Over time, you will recognize patterns to use, you will become more familiar with the options the language has to offer, and you will even find better ways to solve problems you already solved. \n\nLearning how to problem solve problems is challenging but it gets easier with practice and hard work. Working through blocks and getting \"unstuck\" are opportunities that make you a better program.\n\nWhen starting a problem in Builders Test First do the following:\n\n- Read the `README.md` file to gain an understanding of the problem\n- Write [pseudocode](https://www.khanacademy.org/computing/computer-programming/programming/good-practices/p/planning-with-pseudo-code)\n- Define the function you need to create\n- Solve TestSpecs individually (don't try to solve everything at once)\n- Check if there is a `hints.md` file for guidance\n- When you get stuck, post on [discuss](http://discuss.fullstackacademy.com/) or write down your question so you can ask your mentor when you meet!","slug":"foundations-builders::builders-test-first::overview","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"599753b18ca3f20004469a97","id":"599ef7fc1f96b30004b6a3f2"},{"_id":"599ef815eaf1880004dc3e2c","name":"Bootcamp Prep (Pre-Req)","concept":"599753b18ca3f20004469a97","order":0,"__v":3,"text":"If you aren't familiar with JavaScript or need to review the basics, we suggest completing [Bootcamp Prep](https://learn.fullstackacademy.com/workshop/5a97083f970d1c0004636a5b/landing).\n\nBootcamp Prep is an online course that covers the basics of JavaScript. It is designed for anyone with an interest in programming or becoming a Fullstack developer. Whether you have a background in programming — or are just starting off — this is a great course to learn the basics of programming with JavaScript!","slug":"foundations-builders::builders-test-first::jump-start-online-pre-req","createdAt":"2018-05-14T14:08:26.078Z","updatedAt":"2018-05-14T14:08:52.363Z","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"599753b18ca3f20004469a97","id":"599ef815eaf1880004dc3e2c"},{"_id":"599ef81b3978eb0004c10a34","name":"Learning Resources","concept":"599753b18ca3f20004469a97","order":1,"__v":2,"text":"Students enrolled in Foundations Builders are familiar with the basics.  The Builders Course doesn't have an extensive amount of instructional content, instead, it has a series of problems that force you to apply concepts you are familiar with (instead of just watching a video). Builders also provides a Support System to help answer your questions when you are stuck.\n\nHere is a list of resources we suggest. Think of these resources as your \"textbook\".  These resources are optional and not required (some of the resources are paid content).\n\nCodeschool:\n\n- [JavaScript Road Trip Part 1](https://www.codeschool.com/courses/javascript-road-trip-part-1)\n- [JavaScript Road Trip Part 2](https://www.codeschool.com/courses/javascript-road-trip-part-2)\n- [JavaScript Road Trip Part 3](https://www.codeschool.com/courses/javascript-road-trip-part-3)\n\nTreehouse:\n\n- [Beginner JavaScript](https://teamtreehouse.com/tracks/beginner-javascript)\n\t- (Stop at JavaScript and the DOM)\n\t- If you are familiar with ES2015 syntax, Treehouse's course is based on it\n\nReading Material:\n\n- [Eloquent JavaScript](http://eloquentjavascript.net/)\n\n**Remember, this content is optional and not required.**","slug":"foundations-builders::builders-test-first::learning-resources","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"599753b18ca3f20004469a97","id":"599ef81b3978eb0004c10a34"},{"_id":"599ef82e1f96b30004b6a404","name":"Builders Test First Setup","concept":"599753b18ca3f20004469a97","order":2,"__v":11,"text":"## Step 1:\n\nVisit the [Builders Test First Repository](https://github.com/FullstackAcademy/Builders-TestFirst) on Github.\n\n**Note: If you get a 404 Error when you visit the link above please make sure you have integrated your Learndot account with Github. You can do this by clicking on your avatar in the top right corner of the navbar, then settings, then integrations. After you've integrated, visit [this link](https://github.com/fullstackacademy) to accept your invitation to our GitHub team. If you don't have an invitation and are still getting a 404, send an  to email foundations@fullstackacademy.com with your cohort and your github username**\n\n## Step 2:\n\nFork the Repository to your personal account.\n\n<img width=\"50%\" height=\"50%\"src='https://www.dropbox.com/s/fed484dc9491u1g/Pasted_Image_8_24_17__5_05_PM.png?raw=1'/>\n\n## Step 3:\n\n[Clone the Repository](https://help.github.com/articles/cloning-a-repository/) to your local machine, use the link from the `git clone` button.\n\n\n```\n$ git clone https://github.com/{{YOUR-GITHUB-USERNAME-HERE}}/Builders-TestFirst.git\n$ cd Builders-TestFirst\n$ npm install -g testem\n```\n\n**Note: If you get an EACCES error when trying to install globally, you don't have the permissions on your machine to write to the directory where npm stores global packages. To fix this, you can run the install command with sudo (`sudo npm install -g testem`) which will run the command as an administrator. However, going forward you may want to change the permissions on the directory. Step 1 in [this link](https://docs.npmjs.com/getting-started/fixing-npm-permissions) will help you change those permissions. **\n\nTo run the specs for a directory, you need to go into that directory and run the command `testem`. \n\n```\n$ testem\nTEST'EM 'SCRIPTS!\nOpen the URL below in a browser to connect.\nhttp://localhost:7357/\n```\n\nEven though we will not be grading your TestFirst assignments, we encourage you to commit your work and push your commits up to your fork of Builders-TestFirst. \n\n```\n$git add .\n$git commit -m 'your commit message'\n$git push origin master\n```\n\nNot only is this good practice for you, but you will need to push your work up to GitHub in this manner when you take your Checkpoint at the end of Foundations Builders. Get used to using Git now before you start your Checkpoint! If you are lost, please consult the 'Exploring Git' section of this workshop, or post your questions on Discuss or the Help Desk.","slug":"foundations-builders::builders-test-first::builders-test-first-setup","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"599753b18ca3f20004469a97","id":"599ef82e1f96b30004b6a404"},{"_id":"599ef8441f96b30004b6a40b","name":"Builders Test First Solutions","concept":"599753b18ca3f20004469a97","order":3,"__v":1,"text":"Here is a [link to the solutions](https://github.com/FullstackAcademy/Builders-TestFirst-Solutions).  We advise you to use the solutions if you get stuck or completed the problem and want to compare your solution.  Keep in mind, there are many ways of solving problems!","slug":"foundations-builders::builders-test-first::builders-test-first-solutions","createdAt":"2018-04-23T15:48:00.431Z","updatedAt":"2018-04-23T15:48:00.431Z","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"599753b18ca3f20004469a97","id":"599ef8441f96b30004b6a40b"},{"_id":"599f42c9d4fa7300044503b0","name":"Reading Test Specs","concept":"599753b18ca3f20004469a97","order":4,"__v":2,"featuredVideoId":"nKD4xExbYWw","text":"###Overview\n\nThe proper workflow (and best practice) for TDD(Test Driven Development) is to first write tests, then create the code that passes the tests.  To become familiar with reading tests, we are taking an opposite approach for the first series of tests in TestFirst.\n\n####Hello Function\n\nFor each test spec (a spec is an individual test) replace the `FILL_ME_IN` sections of the tests with the values the passing code would return.\n\nThe code that passes the tests is located in the `hello.js` file.  Based on that code, replace all the areas that say FILL_ME_IN with the expected value.  Don't forget to make the expected value the proper data type. For example, a string, boolean, array, etc should reflect the proper syntax.\n\n####Add Function\n\nThe add function adds two numbers together. The first spec passes but the second doesn't.  Our Test Spec is using a global variable and adding the return value from the add function on to its value.\nHow can you \"re-assign\" the global variable to 0 after each Test Spec?  Review the [beforeEach](https://jasmine.github.io/2.0/introduction.html#section-Setup_and_Teardown) function. Then add an assignment expression in the `beforeEach` code block that re-assigns the global variabl `returnValue` back to 0.\n \n<hr>\n\n####Additional Resources\n\n- Refer to the [Jasmine Documentation](http://jasmine.github.io/2.0/introduction.html) to learn more about Jasmine for these Test Specs.","slug":"foundations-builders::builders-test-first::reading-test-specs","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"599753b18ca3f20004469a97","id":"599f42c9d4fa7300044503b0"}],"workshopId":"59970ac2838dc60004e6868a","id":"599753b18ca3f20004469a97"},{"_id":"59b3063a14818c0004ff2499","order":5,"name":"Builders Checkpoint","workshop":"59970ac2838dc60004e6868a","__v":1,"slug":"foundations-builders::builders-checkpoint","draftMode":false,"actions":[{"_id":"59b3064e64d22d00044a0d3a","name":"Checkpoint Information","concept":"59b3063a14818c0004ff2499","order":-1,"__v":5,"featuredVideoId":"NR-gI1qkWsc","text":"The Builders Checkpoint will assess your knowledge of the Builders TestFirst material. \n\nYou will have **2 hours and 45 minutes to complete this challenge**, and can take it from the [Checkpoints](https://learn.fullstackacademy.com/cohortAssessment) page. Students will be able to access this page when a Checkpoint is live (this is at the end of builders).\n\nThe material on the checkpoint will **contain the same concepts and format as Builders TestFirst Part problems**. The best way to study is to complete every challenge in the problem set.","slug":"foundations-builders::builders-checkpoint::checkpoint-information","__t":"Content","visibilityLevel":2,"draftMode":false,"conceptId":"59b3063a14818c0004ff2499","id":"59b3064e64d22d00044a0d3a"}],"workshopId":"59970ac2838dc60004e6868a","id":"59b3063a14818c0004ff2499"},{"_id":"59970ac2838dc60004e6868f","name":"Builders-Test-First Part","workshop":"59970ac2838dc60004e6868a","order":6,"__v":3,"slug":"foundations-builders::builders-test-first-part","draftMode":true,"actions":[{"_id":"59970ac2838dc60004e686a6","concept":"59970ac2838dc60004e6868f","name":"Overview","text":"TestFirst is the most important portion of the Foundations Curriculum.  It provides the JavaScript knowledge needed to be a success student and JavaScript developer! All the content and concepts in TestFirst will be tested in each Checkpoint.  Everything in Test First Part 1 will be the main content tested in the Part 1 Checkpoint during Foundations.\n\n- **Estimated Time To Complete**: 6-10 Hours","order":0,"featuredVideoId":"o8fHNo1C1wA","__v":0,"slug":"foundations-builders::builders-test-first-part::overview","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686a6"},{"_id":"59970ac2838dc60004e686a7","concept":"59970ac2838dc60004e6868f","name":"Setting Up Test First","text":"## Setup\n\nTo start, we need to fork the repository and install `testem`, a Node test-runner that will run your test and code.\n\n<a href=\"https://github.com/FullstackAcademy/TestFirst-Part-1\" class=\"btn btn-primary h5\">TestFirst-Part-1</a>\n\n**Note: If you get a 404 Error when you visit the link above please make sure you have integrated your Learndot account with Github. You can do this by clicking on your avatar in the top right corner of the navbar, then settings, then integrations. After you've integrated, visit [this link](https://github.com/fullstackacademy) to accept your invitation to our GitHub team. If you don't have an invitation and are still getting a 404, send an  to email foundations@fullstackacademy.com with your cohort and your github username**\n\n1. **Fork** the repository to your account. For TestFirst-Part-1 use [this link](https://github.com/FullstackAcademy/TestFirst-Part-1) to access the repository you should fork.\n2. Go to your own repositories on GitHub and **clone the TestFirst-Part-1** repository link.\n3. Use the link in the `git clone` then follow the rest of the commands.\n\n```\n$ git clone https://github.com/{{your user name}}/TestFirst-Part-1.git\n$ cd TestFirst-Part-1\n$ npm install -g testem\n```\n\n**Note: If you get an EACCES error when trying to install globally, you don't have the permissions on your machine to write to the directory where npm stores global packages. To fix this, you can run the install command with sudo (`sudo npm install -g testem`) which will run the command as an administrator. However, going forward you may want to change the permissions on the directory. Step 1 in [this link](https://docs.npmjs.com/getting-started/fixing-npm-permissions) will help you change those permissions. **\n\nTo run the specs for a directory, you need to go into that directory and run the command `testem`. \n\n```\n$ testem\nTEST'EM 'SCRIPTS!\nOpen the URL below in a browser to connect.\nhttp://localhost:7357/\n```\n\nEven though we will not be grading your TestFirst assignments, we encourage you to commit your work and push your commits up to your fork of TestFirst-Checkpoint-Prep-Part-1. \n\n```\n$git add .\n$git commit -m 'your commit message'\n$git push origin master\n```\n\nNot only is this good practice for you, but you will need to push your work up to GitHub in this manner when you take your Checkpoints so that they can be graded.  If you are lost, please consult the 'Exploring Git' section of this workshop.","order":1,"__v":0,"slug":"foundations-builders::builders-test-first-part::setting-up-test-first","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686a7"},{"_id":"59970ac2838dc60004e686a8","concept":"59970ac2838dc60004e6868f","name":"00 - Reading Test Specs","text":"###Overview\n\nThe proper workflow (and best practice) for TDD(Test Driven Development) is to first write tests, then create the code that passes the tests.  To become familiar with reading tests, we are taking an opposite approach for the first series of tests in TestFirst.\n\n####Hello Function\n\nFor each test spec (a spec is an individual test) replace the `FILL_ME_IN` sections of the tests with the values the passing code would return.\n\nThe code that passes the tests is located in the `hello.js` file.  Based on that code, replace all the areas that say FILL_ME_IN with the expected value.  Don't forget to make the expected value the proper data type. For example, a string, boolean, array, etc should reflect the proper syntax.\n\n####Add Function\n\nThe add function adds two numbers together. The first spec passes but the second doesn't.  Our Test Spec is using a global variable and adding the return value from the add function on to its value.\nHow can you \"re-assign\" the global variable to 0 after each Test Spec?  Review the [beforeEach](https://jasmine.github.io/2.0/introduction.html#section-Setup_and_Teardown) function. Then add an assignment expression in the `beforeEach` code block that re-assigns the global variabl `returnValue` back to 0.\n \n<hr>\n\n####Additional Resources\n\n- Refer to the [Jasmine Documentation](http://jasmine.github.io/2.0/introduction.html) to learn more about Jasmine for these Test Specs.","order":2,"featuredVideoId":"nKD4xExbYWw","__v":0,"slug":"foundations-builders::builders-test-first-part::00-reading-test-specs","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686a8"},{"_id":"59970ac2838dc60004e686a9","concept":"59970ac2838dc60004e6868f","name":"01 - Object Properties","text":"###Overview\n\nOne of the most useful `data types` in JavaScript to store values is an Object.  Objects use key/value pairs (in JS the `key` is called a `property`) to access and store values. \n\nOften, you will hear that `Arrays` and `Functions` are special object types.  The following Test Specs will demonstrate how `Arrays` and `Functions` have the same characteristics as an Object Literal, since `Arrays` and `Functions` are Objects. \n\n<hr>\n\n####Lesson Curriculum\n - [Introduction to Data Types](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57acce87b95bba03002d5f69/text)\n - [Objects and Object Properties](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57acceacfaa89d0300dbb774/text)\n- [__proto__ vs .prototype](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e3384b5f3d000456e0cf/text)\n\n####Additional Resources\n- Eloquent JS: [Chapter 4: Data Structures: Objects and Arrays](http://eloquentjavascript.net/04_data.html)","order":3,"featuredVideoId":"kSSjUWQjjPQ","__v":0,"slug":"foundations-builders::builders-test-first-part::01-object-properties","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686a9"},{"_id":"59970ac2838dc60004e686aa","concept":"59970ac2838dc60004e6868f","name":"02 - Factory Functions","text":"###Overview\n\nThe Calculator TestSpec is very similar to 01-Properties.  The difference is instead of passing a function an object to add properties to the object, you will create a function (without passing an object to it as an argument) that **returns** an object with properties. These properties can be of any JavaScript type including functions!  The function will create the object and return the object.\n\nThis pattern is called creating a **Factory Function**, because your function is acting as a factory for making a certain pattern of object. \n\nAs you progress through the calculator specs, you may notice that to pass all the specs, methods may need to be able to reference the object that they belong to. This is a great introduction to the `this` keyword! Please watch the video series on the `this` keyword in JavaScript linked below.\n\n<hr>\n\n###Curriculum Videos\n\n- [What is 'this'](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57a4a79730dc9b03004ac267/text)\n- [Misconceptions of 'this'](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57a49bd330dc9b03004abf79/text)\n- [Call site and execution context](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57a4b04cfda8d1030029dc95/text)\n- [Rule 1: Default Binding](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57a3799bb664a60300f626e4/text)\n- [Rule 2: Implicit Binding](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57a379c5b664a60300f626ec/text)\n\n###Additional Resources\n\n- [MDN - \"this\"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this)","order":4,"featuredVideoId":"4F6ZUK0nzeE","__v":0,"slug":"foundations-builders::builders-test-first-part::02-factory-functions","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686aa"},{"_id":"59970ac2838dc60004e686ab","concept":"59970ac2838dc60004e6868f","name":"03 - Constructor Functions","text":"###Overview\n\nIn 02-Factory-Functions you created a function that returned a Calculator Object.  Let's learn a new way of creating a custom object using a `Constructor Function`. \n`Constructor Functions` create new objects when invoked with the `new` operator and assign the internal prototype of the new object to the Constructor Function's `.prototype` object.  \n\nThe following Test Specs will guide and help you create an RPN Calculator which stands for (Reverse Polish Notation).  RPN Calculators are based on `POSTFIX` arithmetic notation.\n`POSTFIX` aka \"postorder\" notation positions operands (numbers) before their operators, (EX: `4 5 7 * +`) `INFIX` aka \"inorder\" notation is commonly used. `INFIX` notation positions\noperands and operators between each other, (EX: ` 4 + 5 * 7). One of the main advantages of `POSTFIX` notation is the ease of readability.  `POSTFIX` expressions are read from left\nto right, there aren' parenthesis and the concept of operator precedence (order of operations, PEMDAS).  Here is a [link that will demonstrate how to evaluate a `POSTFIX` expression](http://scriptasylum.com/tutorials/infix_postfix/algorithms/postfix-evaluation/)\nor watch the Overview video for a walkthrough.\n \n\nFor example:\n\n```\nINFIX:\n<value> <operator> <value>\n\n2+3\nA-B\n7*2\n5 + 4 * 3\n```\n\n```\nPOSTFIX\n<value> <value> <operator>\n\n2 3 +\nA B -\n7 2 *\n5 4 3 * + \n```\n\n<hr>\n###Overview Video Section\n\n- [What is an RPN Calculator?](https://youtu.be/bDCLUIQx2qU)\n- [Test Spec Overview](https://youtu.be/bDCLUIQx2qU?t=7m40s)\n- [Constructor Function Mini-Lesson](https://youtu.be/bDCLUIQx2qU?t=12m25s)\n\n###Curriculum Videos\n\n- [__proto__ vs '.prototype'](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e3384b5f3d000456e0cf/text)\n- [Constructor Functions Overview](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e3443506550004fb1e0c/text)\n- [new keyword](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e3533506550004fb1e10/text)\n- [prototype Property & Constructors](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e3633506550004fb1e14/text)\n- [Adding Methods to .prototype](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e37d3506550004fb1e18/text)\n- [Rule 4: Binding 'this' using the new keyword](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57a379cd196d170300fd6373/text)\n\n\n###Additional Resources\n\n- Eloquent JavaScript [The Secret Life Of Objects](http://eloquentjavascript.net/06_object.html)","order":5,"featuredVideoId":"bDCLUIQx2qU","__v":0,"slug":"foundations-builders::builders-test-first-part::03-constructor-functions","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686ab"},{"_id":"59970ac2838dc60004e686ac","concept":"59970ac2838dc60004e6868f","name":"04 - All Kinds of Loops","text":"###Overview\n\nLooping is a powerful part of any programming language and allows you to repeat a task until a conditional expression evaluates to false.  Normally a loop has:\n\n- Initial Value (Starting Point)\n- Loop Body (The code that runs each pass of the loop)\n- Conditional Expression (Evaluated each pass of the loop, when it evaluates to false the loop is exited)\n- Counter (the variable that changes each pass of the loop)\n\nA loop is a great way to run a block of code over and over until a condition is met.  The Loops TestSpec will also introduce you to looping over an object's keys and values using a `for in` loop. Remember, it's not good practice to use a `for in` loop to traverse arrays!\n\nThe goal of this TestSpec is to become familiar and comfortable with looping, using nested loops, and looping over an object.\n\n<hr>\n\n###Curriculum Videos\n\n - [For Loops](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57accf0ab95bba03002d5f80/text)\n - [Traversing Objects](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57accf04b95bba03002d5f7e/text)\n\n###Additional Resources\n\n- Eloquent JavaScript [Control Flow](http://eloquentjavascript.net/02_program_structure.html#p_t55fBgZ9ww)","order":6,"featuredVideoId":"Gh8fiR-OMcs","__v":0,"slug":"foundations-builders::builders-test-first-part::04-all-kinds-of-loops","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686ac"},{"_id":"59970ac2838dc60004e686ad","concept":"59970ac2838dc60004e6868f","name":"05 - Functions and Closure","text":"###Overview\n\nAs some of the previous TestSpecs demonstrated, Functions are just Objects.  The following TestSpecs will cover this idea even further while demonstrating other features of functions.  The concepts we will explore are:\n\n- [Arguments Variable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments)\n- [Higher Order Functions](http://eloquentjavascript.net/05_higher_order.html)\n- [Scope](http://javascriptplayground.com/blog/2012/04/javascript-variable-scope-this/) \n- [Closure](http://javascript-roadtrip-part3.codeschool.com/levels/2)\n\n<hr>\n\n###Curriculum Videos\n\n- [Dive into Functions](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57accf4ff3d6370300b481b4/text)\n- [Function Arguments Keyword](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57accf57f3d6370300b481b6/text)\n- [Higher Order Functions](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57accf5ef3d6370300b481b8/text)\n- [Introduction to Scope](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e1d543adc80004d4cce4/text)\n- [Nested Functions & Closure](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e1cb4b5f3d000456e088/text)\n- [Introduction Closure](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/5841e1823506550004fb1dcc/text)\n- [Explicit Binding Rule](https://learn.fullstackacademy.com/workshop/57a21d1d39616e0300f91dd6/content/57a379f88547c503007206d4/text)\n\n###Additional Resources:\n\n- [EJ: Higher Order Functions](http://eloquentjavascript.net/05_higher_order.html)","order":6,"featuredVideoId":"VmpRVz9_pKE","__v":0,"slug":"foundations-builders::builders-test-first-part::05-functions-and-closure","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868f","id":"59970ac2838dc60004e686ad"}],"workshopId":"59970ac2838dc60004e6868a","id":"59970ac2838dc60004e6868f"},{"_id":"59970ac2838dc60004e6868c","name":"Additional Resources","workshop":"59970ac2838dc60004e6868a","order":7,"__v":2,"slug":"foundations-builders::additional-resources","draftMode":true,"actions":[{"_id":"59970ac2838dc60004e68695","concept":"59970ac2838dc60004e6868c","name":"Computer Basics","text":"Please watch the [following videos on the basics of how a computer works](http://teamtreehouse.com/library/computer-basics).  This is very low level knowledge covering how data is read, why there are different operating systems, and why there are different computer languages.","order":-1,"__v":0,"slug":"foundations-builders::additional-resources::computer-basics","draftMode":true,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868c","id":"59970ac2838dc60004e68695"},{"_id":"59970ac2838dc60004e68696","concept":"59970ac2838dc60004e6868c","name":"HTML and CSS resources","text":"If you do not have any experience with HTML or CSS, we suggest checking out some of the resources below.  By the end of Foundations you should feel comfortable using HTML and CSS and be familiar with the basics.\n\nWritten Tutorials:\n\n- [Learn to Code HTML & CSS](http://learn.shayhowe.com/html-css/)\n- [HTML & CSS Web Fundamentals](https://www.codecademy.com/tracks/web)","order":0,"__v":0,"slug":"foundations-builders::additional-resources::html-and-css-resources","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868c","id":"59970ac2838dc60004e68696"},{"_id":"59970ac2838dc60004e68697","concept":"59970ac2838dc60004e6868c","name":"Practice","text":"Here are some great resources we recommend for extra practice!\n\n[Codewars](http://www.codewars.com/) - \"Achieve mastery through challenge!\"\n\n[Daily UI](http://dailyui.co/) - Get a daily user interface design prompt to help you master HTML and CSS","order":1,"__v":0,"slug":"foundations-builders::additional-resources::practice","draftMode":false,"visibilityLevel":2,"conceptId":"59970ac2838dc60004e6868c","id":"59970ac2838dc60004e68697"}],"workshopId":"59970ac2838dc60004e6868a","id":"59970ac2838dc60004e6868c"}]